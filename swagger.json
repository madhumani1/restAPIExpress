{
      "swagger": "2.0",
      "info": {
        "title": "Doctors Scheduler",
        "version": "1.0.0",
        "description": "This is a sample Doctor Scheduler. I am trying to learn how to create a REST API using Express. We can create Swgger by (a). Write the API, create a swagger.json file that will be used by Swagger UI. (b) Write the API, add documentation in the code to auto-generate the Swagger docs and UI. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization filters.",
        "contact": {
            "email": "madhumani1@gmail.com"
        }
      },
      "schemes": [
        "http",
        "https"
      ],
      "basePath": "/api/v1",
      "paths": {
        "/doctors": {
          "get": {
            "summary": "Get all doctors",
            "description": "Retrieves the list of doctors",
            "responses": {
              "200": {
                "description": "The list of doctors",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Doctor"
                  }
                }
              }
            }
          },
          "post": {
            "summary": "Create a doctor",
            "parameters": [
              {
                "name": "doctor",
                "in": "body",
                "schema": {
                  "$ref": "#/definitions/NewDoctor"
                }
              }
            ],
            "description": "Creates a single doctor",
            "consumes": [
              "application/json"
            ],
            "responses": {
              "201": {
                "description": "The newly created doctor",
                "schema": {
                  "$ref": "#/definitions/Doctor"
                }
              }
            }
          }
        },
        "/doctors/{id}": {
          "get": {
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "type": "integer",
                "required": true
              }
            ],
            "summary": "Get single doctor",
            "description": "Get doctor by id",
            "responses": {
              "200": {
                "description": "Single doctor",
                "schema": {
                  "$ref": "#/definitions/Doctor"
                }
              }
            }
          }
        },
        "/visits": {
          "get": {
            "summary": "Get all visits",
            "description": "Retrieves list of visits",
            "responses": {
              "200": {
                "description": "The list of visits",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Visit"
                  }
                }
              }
            }
          }
        },
        "/visits/patient/{id}": {
          "get": {
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "type": "integer",
                "required": true
              }
            ],
            "summary": "Get patient visits",
            "description": "Retrieves list of visits by patient",
            "responses": {
              "200": {
                "description": "The list of visits by patient",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Visit"
                  }
                }
              }
            }
          }
        }
      },
      "definitions": {
        "Doctor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "NewDoctor": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        },
        "Visit": {
          "type": "object",
          "properties": {
            "doctorId": {
              "type": "integer"
            },
            "patientId": {
              "type": "integer"
            },
            "date": {
              "type": "string"
            }
          }
        }
      }
    }
